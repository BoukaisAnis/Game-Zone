<%- include('partials/header', { user, cartCount }) %>

<!-- Enhanced Shop Hero -->
<section class="shop-hero">
    <div class="hero-background">
        <div class="floating-game" style="--delay: 0s;">🎮</div>
        <div class="floating-game" style="--delay: 1s;">🔥</div>
        <div class="floating-game" style="--delay: 2s;">⭐</div>
        <div class="floating-game" style="--delay: 1.5s;">💎</div>
        <div class="floating-game" style="--delay: 0.5s;">🚀</div>
    </div>
    
    <div class="hero-content">
        <div class="hero-text" data-aos="fade-up">
            <h1 class="hero-title">
                <span class="title-gradient">Discover Your Next</span>
                <span class="title-accent">Gaming Adventure</span>
            </h1>
            <p class="hero-subtitle">Explore our curated collection of 12 premium games across all genres. From epic RPGs to intense action titles.</p>
        </div>

        <!-- Enhanced Search & Filters -->
        <div class="hero-controls" data-aos="fade-up" data-aos-delay="200">
            <div class="controls-container">
                <div class="search-section">
                    <div class="search-box">
                        <div class="search-icon">🔍</div>
                        <input 
                            type="text" 
                            id="searchInput" 
                            placeholder="Search games, genres, features..." 
                            class="search-input"
                        >
                        <div class="search-actions">
                            <button class="search-clear" id="clearSearch">✕</button>
                        </div>
                    </div>
                </div>

                <div class="filters-section">
                    <div class="filter-group">
                        <select id="categoryFilter" class="filter-select">
                            <option value="">All Categories</option>
                            <option value="Action">🎯 Action</option>
                            <option value="Adventure">🗺️ Adventure</option>
                            <option value="RPG">⚔️ RPG</option>
                            <option value="Sports">⚽ Sports</option>
                            <option value="Strategy">♟️ Strategy</option>
                            <option value="Racing">🏎️ Racing</option>
                            <option value="Horror">👻 Horror</option>
                            <option value="Platformer">🕹️ Platformer</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <select id="sortFilter" class="filter-select">
                            <option value="featured">⭐ Featured First</option>
                            <option value="price-low">💰 Price: Low to High</option>
                            <option value="price-high">💎 Price: High to Low</option>
                            <option value="name">🔤 Name: A to Z</option>
                            <option value="rating">🌟 Top Rated</option>
                        </select>
                    </div>

                    <div class="view-controls">
                        <button class="view-btn active" data-view="grid">
                            <span>▦</span>
                        </button>
                        <button class="view-btn" data-view="list">
                            <span>☰</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Animated Scroll Indicator -->
    <div class="scroll-indicator" data-aos="fade-up" data-aos-delay="400">
        <div class="scroll-arrow">↓</div>
        <span>Explore Games</span>
    </div>
</section>

<!-- Games Stats -->
<section class="games-stats">
    <div class="container">
        <div class="stats-grid">
            <div class="stat-item" data-aos="fade-up" data-aos-delay="100">
                <div class="stat-icon">🎮</div>
                <div class="stat-content">
                    <div class="stat-number" id="totalGames"><%= products ? products.length : 0 %></div>
                    <div class="stat-label">Total Games</div>
                </div>
            </div>
            <div class="stat-item" data-aos="fade-up" data-aos-delay="200">
                <div class="stat-icon">⭐</div>
                <div class="stat-content">
                    <div class="stat-number" id="featuredGames"><%= products ? products.filter(p => p.featured).length : 0 %></div>
                    <div class="stat-label">Featured</div>
                </div>
            </div>
            <div class="stat-item" data-aos="fade-up" data-aos-delay="300">
                <div class="stat-icon">🔥</div>
                <div class="stat-content">
                    <div class="stat-number" id="saleGames"><%= products ? products.filter(p => p.price < 50).length : 0 %></div>
                    <div class="stat-label">On Sale</div>
                </div>
            </div>
            <div class="stat-item" data-aos="fade-up" data-aos-delay="400">
                <div class="stat-icon">🆕</div>
                <div class="stat-content">
                    <div class="stat-number">12</div>
                    <div class="stat-label">New Releases</div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Products Section -->
<section class="products-section">
    <div class="container">
        <!-- Active Filters -->
        <div class="active-filters" id="activeFilters" data-aos="fade-up">
            <!-- Filters will be dynamically added here -->
        </div>

        <!-- Products Grid/List -->
        <div class="products-view" id="productsView">
            <div class="products-grid" id="productsGrid">
                <% if (products && products.length > 0) { %> 
                    <% products.forEach(function(product, index) { %>
                    <div class="product-card" 
                         data-aos="fade-up" 
                         data-aos-delay="<%= (index % 4) * 100 %>"
                         data-category="<%= product.category %>"
                         data-featured="<%= product.featured %>"
                         data-price="<%= product.price %>"
                         data-name="<%= product.name.toLowerCase() %>"
                         data-rating="4.8">
                        <div class="product-card-inner">
                            <!-- Product Image -->
                            <div class="product-image">
                                <div class="image-container">
                                    <img
                                        src="<%= product.image %>"
                                        alt="<%= product.name %>"
                                        loading="lazy"
                                        onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
                                    >
                                    <div class="image-fallback">
                                        <div class="fallback-icon">🎮</div>
                                        <span><%= product.name %></span>
                                    </div>
                                </div>

                                <!-- Product Badges -->
                                <div class="product-badges">
                                    <% if (product.featured) { %>
                                    <span class="badge badge-featured">
                                        <span class="badge-icon">⭐</span>
                                        Featured
                                    </span>
                                    <% } %> 
                                    <% if (product.price < 50) { %>
                                    <span class="badge badge-sale">
                                        <span class="badge-icon">🔥</span>
                                        Sale <%= Math.round((60 - product.price) / 60 * 100) %>%
                                    </span>
                                    <% } %>
                                    <% if (product.price > 60) { %>
                                    <span class="badge badge-premium">
                                        <span class="badge-icon">💎</span>
                                        Premium
                                    </span>
                                    <% } %>
                                    <span class="badge badge-category">
                                        <%= product.category %>
                                    </span>
                                </div>

                                <!-- Quick Actions -->
                                <div class="product-actions-overlay">
                                    <button class="btn-action btn-quick-view" onclick="showGameDetails('<%= product.name %>', '<%= product.description %>', <%= product.price %>, '<%= product.category %>', '<%= product.image %>')">
                                        <span class="action-icon">👁️</span>
                                        Quick View
                                    </button>
                                    <button class="btn-action btn-add-cart" onclick="addToCart('<%= product._id %>', '<%= product.name %>', <%= product.price %>)">
                                        <span class="action-icon">🛒</span>
                                        Add to Cart
                                    </button>
                                    <button class="btn-action btn-wishlist" onclick="handleWishlist('<%= product._id %>', this)">
                                        <span class="action-icon">❤️</span>
                                        Wishlist
                                    </button>
                                </div>
                            </div>

                            <!-- Product Info -->
                            <div class="product-info">
                                <div class="product-header">
                                    <h3 class="product-title"><%= product.name %></h3>
                                    <div class="product-rating">
                                        <div class="stars">
                                            <span class="star filled">⭐</span>
                                            <span class="star filled">⭐</span>
                                            <span class="star filled">⭐</span>
                                            <span class="star filled">⭐</span>
                                            <span class="star filled">⭐</span>
                                            <span class="rating-value">4.8</span>
                                        </div>
                                        <span class="reviews">(2.4k reviews)</span>
                                    </div>
                                </div>

                                <p class="product-description"><%= product.description %></p>

                                <div class="product-features">
                                    <span class="feature-tag">🎮 Single Player</span>
                                    <span class="feature-tag">👥 Multiplayer</span>
                                    <span class="feature-tag">🏆 Achievements</span>
                                </div>

                                <div class="product-footer">
                                    <div class="price-section">
                                        <div class="price-main">$<%= product.price.toFixed(2) %></div>
                                        <% if (product.price < 50) { %>
                                        <div class="price-original">$60.00</div>
                                        <% } %>
                                    </div>
                                    <div class="action-buttons">
                                        <button class="btn btn-outline btn-sm" onclick="showGameDetails('<%= product.name %>', '<%= product.description %>', <%= product.price %>, '<%= product.category %>', '<%= product.image %>')">
                                            Details
                                        </button>
                                        <button class="btn btn-primary btn-sm" onclick="addToCart('<%= product._id %>', '<%= product.name %>', <%= product.price %>)">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <% }); %> 
                <% } else { %>
                <!-- Empty State -->
                <div class="empty-state" data-aos="fade-up">
                    <div class="empty-icon">🎮</div>
                    <h2>No Games Found</h2>
                    <p>We couldn't find any games matching your criteria. Try adjusting your filters or search terms.</p>
                    <div class="empty-actions">
                        <button class="btn btn-primary" onclick="clearAllFilters()">
                            Clear All Filters
                        </button>
                        <a href="/products/add" class="btn btn-outline">
                            Add New Game
                        </a>
                    </div>
                </div>
                <% } %>
            </div>
        </div>

        <!-- Loading State -->
        <div class="loading-state" id="loadingState">
            <div class="loading-content">
                <div class="loading-spinner"></div>
                <p>Loading amazing games...</p>
            </div>
        </div>
    </div>
</section>

<!-- Enhanced Game Details Modal -->
<div id="gameModal" class="modal">
    <div class="modal-backdrop" onclick="closeModal()"></div>
    <div class="modal-container">
        <div class="modal-content">
            <button class="modal-close" onclick="closeModal()">
                <span class="close-icon">✕</span>
            </button>
            
            <div class="modal-body">
                <div class="modal-gallery">
                    <div class="main-image">
                        <img id="modalImage" src="" alt="Game image">
                    </div>
                    <div class="image-thumbnails">
                        <div class="thumbnail active"><img src="" alt="Thumbnail 1"></div>
                        <div class="thumbnail"><img src="" alt="Thumbnail 2"></div>
                        <div class="thumbnail"><img src="" alt="Thumbnail 3"></div>
                    </div>
                </div>
                
                <div class="modal-details">
                    <div class="modal-header">
                        <h1 id="modalTitle" class="modal-title"></h1>
                        <div class="modal-meta">
                            <span id="modalCategory" class="modal-category"></span>
                            <div class="modal-rating">
                                <span class="stars">⭐⭐⭐⭐⭐</span>
                                <span class="rating">4.8/5</span>
                                <span class="reviews">(2.4k reviews)</span>
                            </div>
                        </div>
                    </div>

                    <div class="modal-description-section">
                        <h3>About this game</h3>
                        <p id="modalDescription" class="modal-description"></p>
                    </div>

                    <div class="modal-features">
                        <h3>Features</h3>
                        <div class="features-grid">
                            <div class="feature">
                                <span class="feature-icon">🎮</span>
                                <span>Single Player</span>
                            </div>
                            <div class="feature">
                                <span class="feature-icon">👥</span>
                                <span>Multiplayer</span>
                            </div>
                            <div class="feature">
                                <span class="feature-icon">🏆</span>
                                <span>Achievements</span>
                            </div>
                            <div class="feature">
                                <span class="feature-icon">🎯</span>
                                <span>Controller Support</span>
                            </div>
                        </div>
                    </div>

                    <div class="modal-purchase">
                        <div class="price-section">
                            <div id="modalPrice" class="modal-price"></div>
                            <div class="price-details">
                                <div id="modalSavings" class="modal-savings"></div>
                                <div class="price-note">Including all taxes</div>
                            </div>
                        </div>
                        
                        <div class="purchase-actions">
                            <button class="btn btn-wishlist" onclick="toggleWishlist(currentProductId)">
                                <span>❤️</span>
                                Add to Wishlist
                            </button>
                            <button class="btn btn-primary btn-large" id="modalAddToCart">
                                <span>🛒</span>
                                Add to Cart
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('partials/footer') %>

<style>
    /* Enhanced Shop Hero */
    .shop-hero {
        background: linear-gradient(135deg, #0f172a 0%, #1e1b4b 50%, #3730a3 100%);
        color: white;
        padding: 120px 0 80px;
        position: relative;
        overflow: hidden;
        min-height: 70vh;
        display: flex;
        align-items: center;
    }

    .hero-background {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        pointer-events: none;
    }

    .floating-game {
        position: absolute;
        font-size: 3rem;
        opacity: 0.1;
        animation: float 6s ease-in-out infinite;
        animation-delay: var(--delay);
    }

    .floating-game:nth-child(1) { top: 20%; left: 10%; }
    .floating-game:nth-child(2) { top: 60%; left: 85%; }
    .floating-game:nth-child(3) { top: 80%; left: 15%; }
    .floating-game:nth-child(4) { top: 30%; left: 80%; }
    .floating-game:nth-child(5) { top: 70%; left: 20%; }

    .hero-content {
        position: relative;
        z-index: 2;
        width: 100%;
    }

    .hero-text {
        text-align: center;
        margin-bottom: 4rem;
    }

    .hero-title {
        font-size: 4.5rem;
        font-weight: 800;
        line-height: 1.1;
        margin-bottom: 1.5rem;
    }

    .title-gradient {
        background: linear-gradient(135deg, #fff 0%, #c7d2fe 100%);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        display: block;
    }

    .title-accent {
        background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        display: block;
    }

    .hero-subtitle {
        font-size: 1.375rem;
        color: rgba(255, 255, 255, 0.8);
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
    }

    /* Enhanced Controls */
    .hero-controls {
        max-width: 1000px;
        margin: 0 auto;
    }

    .controls-container {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--radius-2xl);
        padding: 2rem;
    }

    .search-section {
        margin-bottom: 2rem;
    }

    .search-box {
        position: relative;
        display: flex;
        align-items: center;
        background: rgba(255, 255, 255, 0.15);
        border-radius: var(--radius-xl);
        border: 2px solid rgba(255, 255, 255, 0.3);
        transition: var(--transition);
    }

    .search-box:focus-within {
        border-color: var(--primary);
        background: rgba(255, 255, 255, 0.2);
    }

    .search-icon {
        padding: 0 1rem;
        font-size: 1.2rem;
        opacity: 0.7;
    }

    .search-input {
        flex: 1;
        background: transparent;
        border: none;
        color: white;
        padding: 1.25rem 0;
        font-size: 1.1rem;
        outline: none;
    }

    .search-input::placeholder {
        color: rgba(255, 255, 255, 0.6);
    }

    .search-actions {
        padding: 0 1rem;
    }

    .search-clear {
        background: none;
        border: none;
        color: rgba(255, 255, 255, 0.6);
        cursor: pointer;
        padding: 0.5rem;
        border-radius: var(--radius);
        transition: var(--transition);
    }

    .search-clear:hover {
        color: white;
        background: rgba(255, 255, 255, 0.1);
    }

    .filters-section {
        display: grid;
        grid-template-columns: 1fr 1fr auto;
        gap: 1.5rem;
        align-items: center;
    }

    .filter-group {
        position: relative;
    }

    .filter-select {
        width: 100%;
        padding: 1rem 1.5rem;
        background: rgba(255, 255, 255, 0.15);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: var(--radius-xl);
        color: white;
        font-size: 1rem;
        cursor: pointer;
        transition: var(--transition);
    }

    .filter-select:focus {
        outline: none;
        border-color: var(--primary);
    }

    .filter-select option {
        background: var(--dark);
        color: white;
    }

    .view-controls {
        display: flex;
        gap: 0.5rem;
    }

    .view-btn {
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        color: rgba(255, 255, 255, 0.7);
        padding: 0.75rem;
        border-radius: var(--radius);
        cursor: pointer;
        transition: var(--transition);
    }

    .view-btn.active,
    .view-btn:hover {
        background: var(--primary);
        border-color: var(--primary);
        color: white;
    }

    /* Scroll Indicator */
    .scroll-indicator {
        text-align: center;
        margin-top: 4rem;
        color: rgba(255, 255, 255, 0.6);
    }

    .scroll-arrow {
        font-size: 2rem;
        margin-bottom: 0.5rem;
        animation: bounce 2s infinite;
    }

    /* Games Stats */
    .games-stats {
        background: var(--light);
        padding: 4rem 0;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 2rem;
    }

    .stat-item {
        background: white;
        padding: 2rem;
        border-radius: var(--radius-2xl);
        box-shadow: var(--shadow-lg);
        display: flex;
        align-items: center;
        gap: 1.5rem;
        transition: var(--transition);
    }

    .stat-item:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-xl);
    }

    .stat-icon {
        font-size: 3rem;
        opacity: 0.8;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 800;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        line-height: 1;
    }

    .stat-label {
        color: var(--gray-500);
        font-weight: 600;
        font-size: 1rem;
    }

    /* Products Section */
    .products-section {
        padding: 4rem 0;
    }

    .active-filters {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
    }

    .filter-tag {
        background: var(--primary);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .filter-tag .remove {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 0;
        font-size: 1.2rem;
    }

    /* Enhanced Product Cards */
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 2rem;
    }

    .product-card {
        background: white;
        border-radius: var(--radius-2xl);
        box-shadow: var(--shadow-lg);
        transition: var(--transition-bounce);
        overflow: hidden;
        position: relative;
    }

    .product-card:hover {
        transform: translateY(-8px);
        box-shadow: var(--shadow-2xl);
    }

    .product-card-inner {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .product-image {
        position: relative;
        height: 250px;
        overflow: hidden;
    }

    .image-container {
        width: 100%;
        height: 100%;
        position: relative;
    }

    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: var(--transition-slow);
    }

    .product-card:hover .product-image img {
        transform: scale(1.05);
    }

    .image-fallback {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: var(--gradient-dark);
        display: none;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: white;
        gap: 1rem;
    }

    .fallback-icon {
        font-size: 3rem;
        opacity: 0.7;
    }

    .product-badges {
        position: absolute;
        top: 1rem;
        left: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        z-index: 2;
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: var(--shadow);
    }

    .badge-featured {
        background: var(--gradient-primary);
        color: white;
    }

    .badge-sale {
        background: var(--gradient-secondary);
        color: white;
    }

    .badge-premium {
        background: var(--gradient-accent);
        color: white;
    }

    .badge-category {
        background: rgba(255, 255, 255, 0.9);
        color: var(--dark);
    }

    .product-actions-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        opacity: 0;
        transition: var(--transition);
    }

    .product-card:hover .product-actions-overlay {
        opacity: 1;
    }

    .btn-action {
        background: rgba(255, 255, 255, 0.9);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: var(--radius-xl);
        color: var(--dark);
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        gap: 0.5rem;
        min-width: 160px;
        justify-content: center;
    }

    .btn-action:hover {
        background: white;
        transform: translateY(-2px);
    }

    .product-info {
        padding: 1.5rem;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .product-header {
        margin-bottom: 1rem;
    }

    .product-title {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: var(--dark);
        line-height: 1.3;
    }

    .product-rating {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .stars {
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .rating-value {
        font-weight: 600;
        color: var(--dark);
    }

    .reviews {
        font-size: 0.85rem;
        color: var(--gray-500);
    }

    .product-description {
        color: var(--gray-600);
        line-height: 1.5;
        margin-bottom: 1rem;
        flex: 1;
    }

    .product-features {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }

    .feature-tag {
        background: var(--gray-100);
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.8rem;
        color: var(--gray-700);
    }

    .product-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .price-section {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .price-main {
        font-size: 1.5rem;
        font-weight: 800;
        color: var(--success);
    }

    .price-original {
        font-size: 1rem;
        color: var(--gray-500);
        text-decoration: line-through;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    /* Enhanced Modal */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 10000;
    }

    .modal-backdrop {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(10px);
    }

    .modal-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 2rem;
    }

    .modal-content {
        background: white;
        border-radius: var(--radius-2xl);
        max-width: 1000px;
        width: 100%;
        max-height: 90vh;
        overflow: hidden;
        position: relative;
        animation: modalSlideIn 0.3s var(--ease-out);
    }

    .modal-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(0, 0, 0, 0.5);
        border: none;
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        z-index: 2;
        transition: var(--transition);
    }

    .modal-close:hover {
        background: rgba(0, 0, 0, 0.7);
        transform: scale(1.1);
    }

    .modal-body {
        display: grid;
        grid-template-columns: 1fr 1fr;
        min-height: 600px;
    }

    .modal-gallery {
        background: var(--gradient-dark);
        display: flex;
        flex-direction: column;
    }

    .main-image {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .main-image img {
        max-width: 100%;
        max-height: 400px;
        object-fit: contain;
    }

    .image-thumbnails {
        display: flex;
        gap: 1rem;
        padding: 1rem 2rem;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .thumbnail {
        width: 60px;
        height: 60px;
        border-radius: var(--radius);
        overflow: hidden;
        cursor: pointer;
        opacity: 0.6;
        transition: var(--transition);
    }

    .thumbnail.active,
    .thumbnail:hover {
        opacity: 1;
        transform: scale(1.05);
    }

    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .modal-details {
        padding: 3rem;
        display: flex;
        flex-direction: column;
    }

    .modal-header {
        margin-bottom: 2rem;
    }

    .modal-title {
        font-size: 2.5rem;
        font-weight: 800;
        margin-bottom: 1rem;
        color: var(--dark);
        line-height: 1.2;
    }

    .modal-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-category {
        background: var(--gradient-primary);
        color: white;
        padding: 0.5rem 1.5rem;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .modal-rating {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--gray-600);
    }

    .modal-description-section {
        margin-bottom: 2rem;
    }

    .modal-description-section h3 {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 1rem;
        color: var(--dark);
    }

    .modal-description {
        color: var(--gray-600);
        line-height: 1.6;
    }

    .modal-features {
        margin-bottom: 2rem;
    }

    .modal-features h3 {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 1rem;
        color: var(--dark);
    }

    .features-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    .feature {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem;
        background: var(--gray-50);
        border-radius: var(--radius);
    }

    .feature-icon {
        font-size: 1.2rem;
    }

    .modal-purchase {
        margin-top: auto;
        padding-top: 2rem;
        border-top: 1px solid var(--gray-200);
    }

    .price-section {
        display: flex;
        align-items: flex-end;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .modal-price {
        font-size: 3rem;
        font-weight: 800;
        color: var(--success);
        line-height: 1;
    }

    .price-details {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .modal-savings {
        color: var(--secondary);
        font-weight: 600;
        font-size: 1.1rem;
    }

    .price-note {
        font-size: 0.85rem;
        color: var(--gray-500);
    }

    .purchase-actions {
        display: flex;
        gap: 1rem;
    }

    .btn-wishlist {
        background: var(--gray-100);
        color: var(--gray-700);
        border: 2px solid var(--gray-200);
    }

    .btn-wishlist:hover {
        background: var(--gray-200);
        border-color: var(--gray-300);
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        grid-column: 1 / -1;
    }

    .empty-icon {
        font-size: 4rem;
        margin-bottom: 1.5rem;
        opacity: 0.5;
    }

    .empty-state h2 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: var(--gray-500);
    }

    .empty-state p {
        color: var(--gray-500);
        margin-bottom: 2rem;
        font-size: 1.125rem;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    .empty-actions {
        display: flex;
        gap: 1rem;
        justify-content: center;
    }

    /* Loading State */
    .loading-state {
        display: none;
        text-align: center;
        padding: 4rem 2rem;
        grid-column: 1 / -1;
    }

    .loading-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }

    .loading-spinner {
        width: 50px;
        height: 50px;
        border: 4px solid var(--gray-200);
        border-top: 4px solid var(--primary);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .hero-title {
            font-size: 3.5rem;
        }
        
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .filters-section {
            grid-template-columns: 1fr;
        }
        
        .modal-body {
            grid-template-columns: 1fr;
        }
        
        .modal-gallery {
            height: 300px;
        }
    }

    @media (max-width: 768px) {
        .shop-hero {
            padding: 100px 0 60px;
            min-height: 60vh;
        }
        
        .hero-title {
            font-size: 2.5rem;
        }
        
        .hero-subtitle {
            font-size: 1.125rem;
        }
        
        .controls-container {
            padding: 1.5rem;
        }
        
        .products-grid {
            grid-template-columns: 1fr;
        }
        
        .modal-container {
            padding: 1rem;
        }
        
        .modal-details {
            padding: 2rem;
        }
        
        .purchase-actions {
            flex-direction: column;
        }
    }

    @media (max-width: 640px) {
        .stats-grid {
            grid-template-columns: 1fr;
        }
        
        .product-footer {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }
        
        .action-buttons {
            justify-content: stretch;
        }
        
        .action-buttons .btn {
            flex: 1;
        }
    }

    /* Animations */
    @keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-20px) rotate(5deg); }
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    @keyframes modalSlideIn {
        from {
            opacity: 0;
            transform: scale(0.8) translateY(20px);
        }
        to {
            opacity: 1;
            transform: scale(1) translateY(0);
        }
    }
</style>

<script>
    // Enhanced shop functionality
    document.addEventListener('DOMContentLoaded', function() {
        initializeShop();
    });

    function handleWishlist(productId, button) {
        try {
            // Toggle button state
            button.classList.toggle('active');
            const icon = button.querySelector('.action-icon');
            icon.textContent = button.classList.contains('active') ? '💖' : '❤️';
            
            // You can implement actual wishlist functionality here
            console.log(`Toggle wishlist for product: ${productId}`);
            
            // Show feedback to user
            const message = button.classList.contains('active') ? 
                'Added to wishlist!' : 
                'Removed from wishlist!';
            alert(message);
        } catch (error) {
            console.error('Error handling wishlist:', error);
            alert('Could not update wishlist. Please try again.');
        }
    }

    function initializeShop() {
        setupSearchAndFilters();
        setupViewControls();
        updateStats();
    }

    function setupSearchAndFilters() {
        const searchInput = document.getElementById('searchInput');
        const clearSearch = document.getElementById('clearSearch');
        const categoryFilter = document.getElementById('categoryFilter');
        const sortFilter = document.getElementById('sortFilter');
        const activeFilters = document.getElementById('activeFilters');

        // Search functionality
        searchInput.addEventListener('input', debounce(function() {
            filterProducts();
            updateActiveFilters();
        }, 300));

        clearSearch.addEventListener('click', function() {
            searchInput.value = '';
            filterProducts();
            updateActiveFilters();
        });

        // Filter functionality
        categoryFilter.addEventListener('change', filterProducts);
        sortFilter.addEventListener('change', filterProducts);

        function updateActiveFilters() {
            activeFilters.innerHTML = '';
            
            const searchTerm = searchInput.value;
            const category = categoryFilter.value;
            
            if (searchTerm) {
                const searchFilter = createFilterTag('search', `Search: "${searchTerm}"`, function() {
                    searchInput.value = '';
                    filterProducts();
                    updateActiveFilters();
                });
                activeFilters.appendChild(searchFilter);
            }
            
            if (category) {
                const categoryFilterTag = createFilterTag('category', `Category: ${category}`, function() {
                    categoryFilter.value = '';
                    filterProducts();
                    updateActiveFilters();
                });
                activeFilters.appendChild(categoryFilterTag);
            }
        }

        function createFilterTag(type, label, onRemove) {
            const tag = document.createElement('div');
            tag.className = 'filter-tag';
            tag.innerHTML = `
                ${label}
                <button class="remove" onclick="this.parentElement.remove(); ${onRemove.toString().replace(/\n/g, '')}">×</button>
            `;
            return tag;
        }
    }

    function setupViewControls() {
        const viewBtns = document.querySelectorAll('.view-btn');
        const productsGrid = document.getElementById('productsGrid');
        
        viewBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                viewBtns.forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                
                const view = this.dataset.view;
                productsGrid.className = `products-${view}`;
                
                if (view === 'list') {
                    productsGrid.classList.add('list-view');
                } else {
                    productsGrid.classList.remove('list-view');
                }
            });
        });
    }

    function updateStats() {
        // Stats are updated automatically through data attributes
    }

    function filterProducts() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const category = document.getElementById('categoryFilter').value;
        const sortBy = document.getElementById('sortFilter').value;
        
        const productCards = document.querySelectorAll('.product-card');
        let visibleCount = 0;

        productCards.forEach(card => {
            const name = card.dataset.name;
            const cardCategory = card.dataset.category;
            const featured = card.dataset.featured === 'true';
            const price = parseFloat(card.dataset.price);
            const rating = parseFloat(card.dataset.rating);

            const matchesSearch = name.includes(searchTerm);
            const matchesCategory = !category || cardCategory === category;

            if (matchesSearch && matchesCategory) {
                card.style.display = 'block';
                visibleCount++;
            } else {
                card.style.display = 'none';
            }
        });

        // Update counters
        document.getElementById('totalGames').textContent = visibleCount;
        document.getElementById('featuredGames').textContent = document.querySelectorAll('.product-card[data-featured="true"]:not([style*="display: none"])').length;
        document.getElementById('saleGames').textContent = document.querySelectorAll('.product-card[data-price][data-price